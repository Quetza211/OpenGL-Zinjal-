#ifdef __APPLE__
# include <OpenGL/gl.h>
# include <OpenGL/glu.h>
# include <GLUT/glut.h>
#else
# include <GL/gl.h>
# include <GL/glu.h>
# include <GL/glut.h>
#endif
#include <iostream>
using namespace std;
//Variables
int x,y,r,aux,rx,ry;

void init(){
	glClearColor(1.0,1.0,1.0,1.0);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(-400.0,400.0,-400.0,400.0);
}
	
void circulo(int x1,int y1,int r){ //Agoritmo dado en clase
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0,0.0,0.0);
	glLineWidth(2.0);
	x=0;
	y=r;
	float p=1-r;
	while(x<y){
		glBegin(GL_LINES);
		glVertex2i(x+x1,y+y1);
		glVertex2i(x+x1,-y+y1);
		glVertex2i(-x+x1,y+y1);
		glVertex2i(-x+x1,-y+y1);
		glVertex2i(y+x1,x+y1);
		glVertex2i(y+x1,-x+y1);
		glVertex2i(-y+x1,x+y1);
		glVertex2i(-y+x1,-x+y1);
		glEnd();
		x++;
		if(p<0){
			p=p+2*x+1;
		}else{
			y--;
			p=p+2*(x-y)+1;
		}
	}
	glFlush();
}
	
void elipse(int xc,int yc,int rx,int ry){
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0,0.0,0.0);
	glLineWidth(2.0);
	//Varables para el eclipse
	int rx2=rx*rx;
	int ry2=ry*ry;
	int tworx2=2*rx2;
	int twory2=2*ry2;
	x=0;
	y=ry;
	int px=0;
	int py=tworx2*y;
	
	//Region 1
	int p=ry2-(rx2*ry)+(0.25*rx2);
	while(px<py){
		x=x+1;
		px=px+twory2;
		if(p<0){
			p=p+ry2+px;
		}else{
			y=y-1;
			py=py-tworx2;
			p=p+ry2+px-py;
		}
		glBegin(GL_LINES);
		glVertex2i(xc+x,yc+y);
		glVertex2i(xc-x,yc+y);
		glVertex2i(xc+x,yc-y);
		glVertex2i(xc-x,yc-y);
		glEnd();
	}
	//Region 2
	p=ry2*(x+0.5)*(x+0.5)+rx2*(y-1)*(y-1)-rx2*ry2;
	while(y>0){
		y=y-1;
		py=py-tworx2;
		if(p>0){
			p=p+rx2-py;
		}else{
			x=x+1;
			px=px+twory2;
			p=p+rx2-py+px;
		}
		glBegin(GL_LINES);
		glVertex2i(xc+x,yc+y);
		glVertex2i(xc-x,yc+y);
		glVertex2i(xc+x,yc-y);
		glVertex2i(xc-x,yc-y);
		glEnd();
	};
	glFlush();
}
		

void datos(){ //Se dan las coordenadas de x,y de las 2 figuras
	do{
	cout<<"Seleccione un numero para poder crear la figura siguiente: "<<endl;
	cout<<"1: Circulo"<<endl;
	cout<<"2: Elipse"<<endl;
	cout<<"3: Salir"<<endl;
	cin>>aux;
	switch(aux){
	case 1:
		cout<<"Escriba las coordenadas siguientes"<<endl;
		cout<<"Coordenadas en x"<<endl;
		cin>>x;
		cout<<"Coordenadas en y"<<endl;
		cin>>y;
		cout<<"Coordenadas en r"<<endl;
		cin>>r;
		circulo(x,y,r);
		break;
	case 2:
		cout<<"Escriba las coordenadas siguientes"<<endl;
		cout<<"Coordenadas en x"<<endl;
		cin>>x;
		cout<<"Coordenadas en y"<<endl;
		cin>>y;
		cout<<"Coordenadas de rx"<<endl;
		cin>>rx;
		cout<<"Coordenadas de ry"<<endl;
		cin>>ry;
		elipse(x,y,rx,ry);
		break;
	default:
		cout<<"Numero incorrecto"<<endl;
	}
	} while(aux!=3);
}
	
	int main(int argc,char** argv){
		glutInit(&argc,argv);
		glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
		glutInitWindowSize(500,500);
		glutCreateWindow("Circulo y Elipse");
		init();
		glutDisplayFunc(datos);
		glutMainLoop();
	}
